# heroku postgre settings:
spring.datasource.url = ${JDBC_DATABASE_URL}
spring.datasource.username = ${JDBC_DATABASE_USERNAME}
spring.datasource.password = ${JDBC_DATABASE_PASSWORD}
spring.datasource.driverClassName = org.postgresql.Driver

# postgre local settings:
#spring.datasource.url = jdbc:postgresql://localhost:5432/events
#spring.datasource.username = postgres
#spring.datasource.password = root
#spring.datasource.driverClassName = org.postgresql.Driver

#spring.datasource.initialize = true
#spring.datasource.init-sql = classpath:*postgre-sql-schema.sql
#spring.datasource.data = classpath:*data.sql

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.open-in-view = true

security.oauth2.resource.filter-order = 3

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# spring.jackson.serialization.fail-on-empty-beans=false

# server.port=8181